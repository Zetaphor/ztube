<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= channel.name %> - ZTube
  </title>
  <script src="https://cdn.tailwindcss.com/3.4.3"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <link href="/css/style.css" rel="stylesheet">
  <style>
    /* Basic banner styling */
    .channel-banner {
      background-size: cover;
      background-position: center center;
      height: 200px;
      /* Adjust as needed */
      background-color: #3f3f46;
      /* zinc-700 fallback */
    }
  </style>
</head>

<body class="bg-zinc-900 text-zinc-100">
  <!-- Simple Navbar - Can be reused or customized -->
  <nav class="bg-green-600 text-white p-4">
    <div class="container mx-auto flex justify-between items-center">
      <a href="/" class="text-2xl font-bold">ZTube</a>
      <!-- Add search bar if desired -->
    </div>
  </nav>

  <main class="container mx-auto mt-4">
    <!-- Channel Header -->
    <div class="channel-banner rounded-t-lg" style="background-image: url('<%= channel.banner %>');"></div>
    <div class="bg-zinc-800 p-4 rounded-b-lg shadow-md">
      <div class="flex flex-col sm:flex-row items-center">
        <img src="<%= channel.avatar %>" alt="<%= channel.name %>"
          class="w-24 h-24 rounded-full border-4 border-zinc-900 -mt-12 sm:mr-6 mb-4 sm:mb-0">
        <div class="flex-1 text-center sm:text-left">
          <h1 class="text-3xl font-bold text-zinc-100">
            <%= channel.name %>
          </h1>
          <p class="text-zinc-400 mt-1">
            <%= channel.subscriber_count %>
          </p>
          <% if (channel.video_count) { %>
            <p class="text-zinc-400 text-sm">
              <%= channel.video_count %>
            </p>
            <% } %>
        </div>
        <!-- Add Subscribe button or other actions here -->
      </div>
    </div>

    <!-- Channel Content (Tabs, Videos, Playlists, etc.) -->
    <div class="mt-6">
      <!-- Tabs (Example Structure) -->
      <div class="border-b border-zinc-700 mb-4">
        <nav class="-mb-px flex space-x-8" aria-label="Tabs">
          <!-- Current: "border-green-500 text-green-500", Default: "border-transparent text-zinc-400 hover:text-zinc-200 hover:border-zinc-300" -->
          <a href="#" class="border-green-500 text-green-500 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
            aria-current="page">
            Videos
          </a>
          <a href="#"
            class="border-transparent text-zinc-400 hover:text-zinc-200 hover:border-zinc-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
            Playlists
          </a>
          <a href="#"
            class="border-transparent text-zinc-400 hover:text-zinc-200 hover:border-zinc-300 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm">
            About
          </a>
          <!-- Add more tabs as needed -->
        </nav>
      </div>

      <!-- Content Area (Load dynamically) -->
      <div id="channelContent" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        <!-- Videos/Playlists will be loaded here by JavaScript -->
        <p class="col-span-full text-center text-zinc-500 py-8">Loading content...</p>
      </div>
    </div>

  </main>

  <!-- Link to a potential channel-specific JS file -->
  <!-- <script src="/js/channel.js"></script> -->
  <script>
    // Basic inline script to log channel data (for now)
    const channelData = JSON.parse('<%- JSON.stringify(channel || {}) %>'); // Parse the stringified JSON
    console.log('Channel Data:', channelData);

    // TODO: Implement fetching and displaying channel content (videos, playlists)
    //       based on the active tab.
    // Example: fetch(`/api/channel/${channelData.id}/videos`).then(...)

    document.addEventListener('DOMContentLoaded', () => {
      // Placeholder: You would add logic here to fetch and display content
      console.log('Channel page loaded for:', channelData.name);

      // Example of how you might fetch videos initially
      // if (channelData.id) {
      //   fetchChannelContent(channelData.id, 'videos');
      // }
    });

    // async function fetchChannelContent(channelId, contentType) {
    //   const contentArea = document.getElementById('channelContent');
    //   contentArea.innerHTML = '<p class="col-span-full text-center text-zinc-500 py-8">Loading content...</p>';
    //   try {
    //     // Replace with your actual API endpoint for channel content
    //     // const response = await fetch(`/api/channel/${channelId}/${contentType}`);
    //     // const data = await response.json();

    //     // --- MOCK DATA FOR NOW ---
    //     await new Promise(resolve => setTimeout(resolve, 500)); // Simulate network delay
    //     const data = { items: [] }; // Replace with actual data structure
    //     // --- END MOCK DATA ---

    //     contentArea.innerHTML = ''; // Clear loading indicator

    //     if (data.items && data.items.length > 0) {
    //       data.items.forEach(item => {
    //         // Adapt your createVideoCard or create similar card functions
    //         // const card = createVideoCard(item);
    //         // contentArea.appendChild(card);
    //       });
    //     } else {
    //       contentArea.innerHTML = `<p class="col-span-full text-center text-zinc-500 py-8">No ${contentType} found.</p>`;
    //     }
    //   } catch (error) {
    //     console.error(`Error fetching ${contentType}:`, error);
    //     contentArea.innerHTML = `<p class="col-span-full text-center text-red-500 py-8">Failed to load ${contentType}.</p>`;
    //   }
    // }

  </script>

</body>

</html>